Windows PowerShell
Copyright (C) Microsoft Corporation. All rights reserved.

PS C:\Users\Max> docker container list
CONTAINER ID        IMAGE               COMMAND             CREATED              STATUS              PORTS               NAMES
351cebb45231        dat520-lab4         "/bin/bash"         About a minute ago   Up About a minute                       hardcore_grothendieck
PS C:\Users\Max> docker run --net paxosnet --ip 172.18.0.3 -it dat520-lab4 /bin/bash
root@ba516ab6304b:/go# ip
Usage: ip [ OPTIONS ] OBJECT { COMMAND | help }
       ip [ -force ] -batch filename
where  OBJECT := { link | address | addrlabel | route | rule | neigh | ntable |
                   tunnel | tuntap | maddress | mroute | mrule | monitor | xfrm |
                   netns | l2tp | fou | macsec | tcp_metrics | token | netconf | ila }
       OPTIONS := { -V[ersion] | -s[tatistics] | -d[etails] | -r[esolve] |
                    -h[uman-readable] | -iec |
                    -f[amily] { inet | inet6 | ipx | dnet | mpls | bridge | link } |
                    -4 | -6 | -I | -D | -B | -0 |
                    -l[oops] { maximum-addr-flush-attempts } | -br[ief] |
                    -o[neline] | -t[imestamp] | -ts[hort] | -b[atch] [filename] |
                    -rc[vbuf] [size] | -n[etns] name | -a[ll] | -c[olor]}
root@ba516ab6304b:/go# ip addr
1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
       valid_lft forever preferred_lft forever
2: sit0@NONE: <NOARP> mtu 1480 qdisc noop state DOWN group default qlen 1000
    link/sit 0.0.0.0 brd 0.0.0.0
18: eth0@if19: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP group default
    link/ether 02:42:ac:12:00:03 brd ff:ff:ff:ff:ff:ff link-netnsid 0
    inet 172.18.0.3/16 brd 172.18.255.255 scope global eth0
       valid_lft forever preferred_lft forever
root@ba516ab6304b:/go# exit
exit
PS C:\Users\Max> docker container list
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES
351cebb45231        dat520-lab4         "/bin/bash"         2 minutes ago       Up 2 minutes                            hardcore_grothendieck
PS C:\Users\Max> docker container list -a
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS                      PORTS               NAMES
ba516ab6304b        dat520-lab4         "/bin/bash"         49 seconds ago      Exited (0) 10 seconds ago                       friendly_herschel
351cebb45231        dat520-lab4         "/bin/bash"         3 minutes ago       Up 2 minutes                                    hardcore_grothendieck
PS C:\Users\Max> docker container

Usage:  docker container COMMAND

Manage containers

Options:


Commands:
  attach      Attach local standard input, output, and error streams to a running container
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  diff        Inspect changes to files or directories on a container's filesystem
  exec        Run a command in a running container
  export      Export a container's filesystem as a tar archive
  inspect     Display detailed information on one or more containers
  kill        Kill one or more running containers
  logs        Fetch the logs of a container
  ls          List containers
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  prune       Remove all stopped containers
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  run         Run a command in a new container
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  wait        Block until one or more containers stop, then print their exit codes

Run 'docker container COMMAND --help' for more information on a command.
PS C:\Users\Max> docker container stop hardcore_
Error response from daemon: No such container: hardcore_
PS C:\Users\Max> docker container stop hardcore_Æ
Error response from daemon: No such container: hardcore_Æ
PS C:\Users\Max> docker container stop hardcore_*
Error response from daemon: No such container: hardcore_*
PS C:\Users\Max> docker container stop 351
351
PS C:\Users\Max> docker container list
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES
PS C:\Users\Max> docker container list -a
CONTAINER ID        IMAGE               COMMAND             CREATED              STATUS                      PORTS               NAMES
ba516ab6304b        dat520-lab4         "/bin/bash"         About a minute ago   Exited (0) 47 seconds ago                       friendly_herschel
351cebb45231        dat520-lab4         "/bin/bash"         3 minutes ago        Exited (0) 8 seconds ago                        hardcore_grothendieck
PS C:\Users\Max> docker start 351
351
PS C:\Users\Max> docker container list
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES
351cebb45231        dat520-lab4         "/bin/bash"         5 minutes ago       Up 6 seconds                            hardcore_grothendieck
PS C:\Users\Max> docker attach 351
root@351cebb45231:/go# ip addr
1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
       valid_lft forever preferred_lft forever
2: sit0@NONE: <NOARP> mtu 1480 qdisc noop state DOWN group default qlen 1000
    link/sit 0.0.0.0 brd 0.0.0.0
20: eth0@if21: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP group default
    link/ether 02:42:ac:12:00:02 brd ff:ff:ff:ff:ff:ff link-netnsid 0
    inet 172.18.0.2/16 brd 172.18.255.255 scope global eth0
       valid_lft forever preferred_lft forever
root@351cebb45231:/go# exit
exit


////////////////////////////////////////////////////////////////////////////////////////////////

Starting "default"...
(default) Check network to re-create if needed...
(default) Windows might ask for the permission to configure a dhcp server. Sometimes, such confirmation window is minimized in the taskbar.
(default) Waiting for an IP...
Machine "default" was started.
Waiting for SSH to be available...
Detecting the provisioner...
Started machines may have new IP addresses. You may need to re-run the `docker-machine env` command.
Regenerate TLS machine certs?  Warning: this is irreversible. (y/n): Regenerating TLS certificates
Waiting for SSH to be available...
Detecting the provisioner...
Copying certs to the local machine directory...
Copying certs to the remote machine...
Setting Docker configuration on the remote daemon...

This machine has been allocated an IP address, but Docker Machine could not
reach it successfully.

SSH for the machine should still work, but connecting to exposed ports, such as
the Docker daemon port (usually <ip>:2376), may not work properly.

You may need to add the route manually, or use another related workaround.

This could be due to a VPN, proxy, or host file configuration issue.

You also might want to clear any VirtualBox host only interfaces you are not using.



                        ##         .
                  ## ## ##        ==
               ## ## ## ## ##    ===
           /"""""""""""""""""\___/ ===
      ~~~ {~~ ~~~~ ~~~ ~~~~ ~~~ ~ /  ===- ~~~
           \______ o           __/
             \    \         __/
              \____\_______/

docker is configured to use the default machine with IP 192.168.99.100
For help getting started, check out the docs at https://docs.docker.com


Start interactive shell

Max@DESKTOP-0A1DC1R MINGW64 /c/Program Files/Docker Toolbox
$ docker

Usage:  docker COMMAND

A self-sufficient runtime for containers

Options:
      --config string      Location of client config files (default
                           "C:\\Users\\Max\\.docker")
  -D, --debug              Enable debug mode
  -H, --host list          Daemon socket(s) to connect to
  -l, --log-level string   Set the logging level
                           ("debug"|"info"|"warn"|"error"|"fatal")
                           (default "info")
      --tls                Use TLS; implied by --tlsverify
      --tlscacert string   Trust certs signed only by this CA (default
                           "C:\\Users\\Max\\.docker\\machine\\machines\\default\\ca.pem")
      --tlscert string     Path to TLS certificate file (default
                           "C:\\Users\\Max\\.docker\\machine\\machines\\default\\cert.pem")
      --tlskey string      Path to TLS key file (default
                           "C:\\Users\\Max\\.docker\\machine\\machines\\default\\key.pem")
      --tlsverify          Use TLS and verify the remote (default true)
  -v, --version            Print version information and quit

Management Commands:
  config      Manage Docker configs
  container   Manage containers
  image       Manage images
  network     Manage networks
  node        Manage Swarm nodes
  plugin      Manage plugins
  secret      Manage Docker secrets
  service     Manage services
  swarm       Manage Swarm
  system      Manage Docker
  trust       Manage trust on Docker images
  volume      Manage volumes

Commands:
  attach      Attach local standard input, output, and error streams to a running container
  build       Build an image from a Dockerfile
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  diff        Inspect changes to files or directories on a container's filesystem
  events      Get real time events from the server
  exec        Run a command in a running container
  export      Export a container's filesystem as a tar archive
  history     Show the history of an image
  images      List images
  import      Import the contents from a tarball to create a filesystem image
  info        Display system-wide information
  inspect     Return low-level information on Docker objects
  kill        Kill one or more running containers
  load        Load an image from a tar archive or STDIN
  login       Log in to a Docker registry
  logout      Log out from a Docker registry
  logs        Fetch the logs of a container
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  ps          List containers
  pull        Pull an image or a repository from a registry
  push        Push an image or a repository to a registry
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  rmi         Remove one or more images
  run         Run a command in a new container
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  search      Search the Docker Hub for images
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  version     Show the Docker version information
  wait        Block until one or more containers stop, then print their exit codes

Run 'docker COMMAND --help' for more information on a command.

Max@DESKTOP-0A1DC1R MINGW64 /c/Program Files/Docker Toolbox
$  cd C:\Users\Max\USERPROFILE\src\dat520.github.io\lab4
bash: cd: C:UsersMaxUSERPROFILEsrcdat520.github.iolab4: No such file or directory

Max@DESKTOP-0A1DC1R MINGW64 /c/Program Files/Docker Toolbox
$  cd /Users/Max/USERPROFILE/src/dat520.github.io/lab4
bash: cd: /Users/Max/USERPROFILE/src/dat520.github.io/lab4: No such file or directory

Max@DESKTOP-0A1DC1R MINGW64 /c/Program Files/Docker Toolbox
$ cd /usr/
bin/     etc/     lib/     libexec/ share/   ssl/

Max@DESKTOP-0A1DC1R MINGW64 /c/Program Files/Docker Toolbox
$ cd /

Max@DESKTOP-0A1DC1R MINGW64 /
$ ls
bin/  dev/  git-bash.exe*  LICENSE.txt  proc/              tmp/          unins000.exe*  usr/
cmd/  etc/  git-cmd.exe*   mingw64/     ReleaseNotes.html  unins000.dat  unins000.msg

Max@DESKTOP-0A1DC1R MINGW64 /
$ cd c

Max@DESKTOP-0A1DC1R MINGW64 /c
$ ls
'$Recycle.Bin'/             ESD/           MSOCache/               Recovery/                     Windows/
 _acestream_cache_/         Games/         pagefile.sys            Software/                     Windows.old/
 aow_drv.log                Go/            PerfLogs/               swapfile.sys                  windows-version.txt
 Config.Msi/                hiberfil.sys  'Program Files'/        'System Volume Information'/
'Documents and Settings'@   Intel/        'Program Files (x86)'/   Temp/
 Drivers/                   KMPlayer/      ProgramData/            Users/

Max@DESKTOP-0A1DC1R MINGW64 /c
$ cd Users/

Max@DESKTOP-0A1DC1R MINGW64 /c/Users
$ ls
'All Users'@   Default/  'Default User'@   desktop.ini   Max/   Public/

Max@DESKTOP-0A1DC1R MINGW64 /c/Users
$ cd Max/

Max@DESKTOP-0A1DC1R MINGW64 ~
$ ks
bash: ks: command not found

Max@DESKTOP-0A1DC1R MINGW64 ~
$ ls
'3D Objects'/
 Anaconda3/
 ansel/
 AppData/
'Application Data'@
 Contacts/
 Cookies@
 Desktop/
 desktop.ini
 dis_materials/
 Documents/
 Downloads/
 elasticsearch/
 Evernote/
 Favorites/
 Intel/
 IntelGraphicsProfiles/
 java_error_in_pycharm.hprof
 Links/
'Local Settings'@
 MicrosoftEdgeBackups/
 Music/
'My Documents'@
 NetHood@
 NTUSER.DAT
 ntuser.dat.LOG1
 ntuser.dat.LOG2
 NTUSER.DAT{c0c9484a-3f6a-11e9-9998-a8773bc607bc}.TM.blf
 NTUSER.DAT{c0c9484a-3f6a-11e9-9998-a8773bc607bc}.TMContainer00000000000000000001.regtrans-ms
 NTUSER.DAT{c0c9484a-3f6a-11e9-9998-a8773bc607bc}.TMContainer00000000000000000002.regtrans-ms
 ntuser.ini
 OneDrive/
 Pictures/
 PrintHood@
 PycharmProjects/
 Recent@
'Saved Games'/
 scikit_learn_data/
 Searches/
 SendTo@
'Start Menu'@
 Sti_Trace.log
 Templates@
 USERPROFILE/
 Videos/
'VirtualBox VMs'/

Max@DESKTOP-0A1DC1R MINGW64 ~
$ cd USERPROFILE/

Max@DESKTOP-0A1DC1R MINGW64 ~/USERPROFILE
$ ls
bin/  gotut/  pkg/  src/

Max@DESKTOP-0A1DC1R MINGW64 ~/USERPROFILE
$ cd src/

Max@DESKTOP-0A1DC1R MINGW64 ~/USERPROFILE/src
$ ls
dat520.github.io/  github.com/  golang.org/  google.golang.org/

Max@DESKTOP-0A1DC1R MINGW64 ~/USERPROFILE/src
$ cd dat520.github.io/

Max@DESKTOP-0A1DC1R MINGW64 ~/USERPROFILE/src/dat520.github.io (master)
$ ls
lab1/  lab2/  lab3/  lab4/

Max@DESKTOP-0A1DC1R MINGW64 ~/USERPROFILE/src/dat520.github.io (master)
$

Max@DESKTOP-0A1DC1R MINGW64 ~/USERPROFILE/src/dat520.github.io (master)
$ docker build -t dat520-lab4 -f lab
lab1/ lab2/ lab3/ lab4/

Max@DESKTOP-0A1DC1R MINGW64 ~/USERPROFILE/src/dat520.github.io (master)
$ docker build -t dat520-lab4 -f lab
lab1/ lab2/ lab3/ lab4/

Max@DESKTOP-0A1DC1R MINGW64 ~/USERPROFILE/src/dat520.github.io (master)
$ docker build -t dat520-lab4 -f lab4/PaxosServer/Dockerfile .
Sending build context to Docker daemon  12.63MB
Step 1/4 : FROM golang
 ---> cee68f119e19
Step 2/4 : COPY ./ /go/src/dat520.github.io
 ---> 3c385233520e
Step 3/4 : RUN go install dat520.github.io/lab4/singlepaxos/main_distributed
 ---> Running in f3c5e0874117
can't load package: package dat520.github.io/lab4/singlepaxos/main_distributed: no Go files in /go/src/dat520.github.io/lab4/singlepaxos/main_distributed
The command '/bin/sh -c go install dat520.github.io/lab4/singlepaxos/main_distributed' returned a non-zero code: 1

Max@DESKTOP-0A1DC1R MINGW64 ~/USERPROFILE/src/dat520.github.io (master)
$ docker build -t dat520-lab4 -f lab4/PaxosServer/Dockerfile .
Sending build context to Docker daemon  12.63MB
Step 1/4 : FROM golang
 ---> cee68f119e19
Step 2/4 : COPY ./ /go/src/dat520.github.io
 ---> ee9ef1802295
Step 3/4 : RUN go install dat520.github.io/lab4/PaxosServer/
 ---> Running in 8717f0bf9399
Removing intermediate container 8717f0bf9399
 ---> a41288d670e3
Step 4/4 : ENTRYPOINT /go/bin/PaxosServer
 ---> Running in 2e81b0d55237
Removing intermediate container 2e81b0d55237
 ---> 6d2d8ee784ed
Successfully built 6d2d8ee784ed
Successfully tagged dat520-lab4:latest
SECURITY WARNING: You are building a Docker image from Windows against a non-Windows Docker host. All files and directories added to build context will have '-rwxr-xr-x' permissions. It is recommended to double check and reset permissions for sensitive files and directories.

Max@DESKTOP-0A1DC1R MINGW64 ~/USERPROFILE/src/dat520.github.io (master)
$ docker container list
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES

Max@DESKTOP-0A1DC1R MINGW64 ~/USERPROFILE/src/dat520.github.io (master)
$ docker image list
REPOSITORY          TAG                 IMAGE ID            CREATED              SIZE
dat520-lab4         latest              6d2d8ee784ed        19 seconds ago       789MB
<none>              <none>              3c385233520e        About a minute ago   785MB
<none>              <none>              1dc64fd76dca        18 hours ago         789MB
<none>              <none>              a67d30d8d21e        18 hours ago         789MB
<none>              <none>              3fa458616d51        18 hours ago         785MB
<none>              <none>              3372a52b6cbc        18 hours ago         785MB
<none>              <none>              3e6887026892        18 hours ago         785MB
<none>              <none>              6386a1f252ed        18 hours ago         785MB
<none>              <none>              58c6ba556709        18 hours ago         785MB
<none>              <none>              887550d7d287        18 hours ago         785MB
<none>              <none>              b91db0eec043        19 hours ago         785MB
golang              latest              cee68f119e19        2 days ago           772MB
hello-world         latest              fce289e99eb9        2 months ago         1.84kB
docker/whalesay     latest              6b362a9f73eb        3 years ago          247MB

Max@DESKTOP-0A1DC1R MINGW64 ~/USERPROFILE/src/dat520.github.io (master)
$ docker image rm dat520-lab4
Untagged: dat520-lab4:latest
Deleted: sha256:6d2d8ee784edb5b526656c8a772566d6a0c43a86ee5581f7e1ba4f8600039afc
Deleted: sha256:a41288d670e3ba73feb0cf67c2bbf4075695cf00fc70520dfda295dc13a52155
Deleted: sha256:6eb042e943506b3396ee83876f4d891f4ce7f8f5219837569996c69b3eda8266
Deleted: sha256:ee9ef1802295775995affae122ee8cdf8b9e899cdd7e936d72cfa62ba0b3c835
Deleted: sha256:d309a7e2fc23979196ae1bb6e2fd068fb3c8209d5aaa0ed560eee82d3b6dce2f

Max@DESKTOP-0A1DC1R MINGW64 ~/USERPROFILE/src/dat520.github.io (master)
$ docker image list
REPOSITORY          TAG                 IMAGE ID            CREATED              SIZE
<none>              <none>              3c385233520e        About a minute ago   785MB
<none>              <none>              1dc64fd76dca        18 hours ago         789MB
<none>              <none>              a67d30d8d21e        18 hours ago         789MB
<none>              <none>              3fa458616d51        18 hours ago         785MB
<none>              <none>              3372a52b6cbc        18 hours ago         785MB
<none>              <none>              3e6887026892        18 hours ago         785MB
<none>              <none>              6386a1f252ed        18 hours ago         785MB
<none>              <none>              58c6ba556709        18 hours ago         785MB
<none>              <none>              887550d7d287        18 hours ago         785MB
<none>              <none>              b91db0eec043        19 hours ago         785MB
golang              latest              cee68f119e19        2 days ago           772MB
hello-world         latest              fce289e99eb9        2 months ago         1.84kB
docker/whalesay     latest              6b362a9f73eb        3 years ago          247MB

Max@DESKTOP-0A1DC1R MINGW64 ~/USERPROFILE/src/dat520.github.io (master)
$ docker build -t dat520-lab4 -f lab4/PaxosServer/Dockerfile .
Sending build context to Docker daemon  12.63MB
Step 1/3 : FROM golang
 ---> cee68f119e19
Step 2/3 : COPY ./ /go/src/dat520.github.io
 ---> 3e2ec7c2be71
Step 3/3 : RUN go install dat520.github.io/lab4/PaxosServer/
 ---> Running in a50e0749f092
Removing intermediate container a50e0749f092
 ---> 5337fbe96a26
Successfully built 5337fbe96a26
Successfully tagged dat520-lab4:latest
SECURITY WARNING: You are building a Docker image from Windows against a non-Windows Docker host. All files and directories added to build context will have '-rwxr-xr-x' permissions. It is recommended to double check and reset permissions for sensitive files and directories.

Max@DESKTOP-0A1DC1R MINGW64 ~/USERPROFILE/src/dat520.github.io (master)
$ docker run -it dat520-lab4 /bin/bash
root@6bf5b70ee465:/go# ls
bin  src
root@6bf5b70ee465:/go# cd bin/
root@6bf5b70ee465:/go/bin# ls
PaxosServer
root@6bf5b70ee465:/go/bin# ./PaxosServer
Specify the ID of the process : ^C
root@6bf5b70ee465:/go/bin# ip
Usage: ip [ OPTIONS ] OBJECT { COMMAND | help }
       ip [ -force ] -batch filename
where  OBJECT := { link | address | addrlabel | route | rule | neigh | ntable |
                   tunnel | tuntap | maddress | mroute | mrule | monitor | xfrm |
                   netns | l2tp | fou | macsec | tcp_metrics | token | netconf | ila }
       OPTIONS := { -V[ersion] | -s[tatistics] | -d[etails] | -r[esolve] |
                    -h[uman-readable] | -iec |
                    -f[amily] { inet | inet6 | ipx | dnet | mpls | bridge | link } |
                    -4 | -6 | -I | -D | -B | -0 |
                    -l[oops] { maximum-addr-flush-attempts } | -br[ief] |
                    -o[neline] | -t[imestamp] | -ts[hort] | -b[atch] [filename] |
                    -rc[vbuf] [size] | -n[etns] name | -a[ll] | -c[olor]}
root@6bf5b70ee465:/go/bin# ip addr
1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
       valid_lft forever preferred_lft forever
2: sit0@NONE: <NOARP> mtu 1480 qdisc noop state DOWN group default qlen 1000
    link/sit 0.0.0.0 brd 0.0.0.0
13: eth0@if14: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP group default
    link/ether 02:42:ac:11:00:02 brd ff:ff:ff:ff:ff:ff link-netnsid 0
    inet 172.17.0.2/16 brd 172.17.255.255 scope global eth0
       valid_lft forever preferred_lft forever
root@6bf5b70ee465:/go/bin# exit
exit

Max@DESKTOP-0A1DC1R MINGW64 ~/USERPROFILE/src/dat520.github.io (master)
$ docker container list -a
CONTAINER ID        IMAGE               COMMAND                  CREATED              STATUS                     PORTS               NAMES
6bf5b70ee465        dat520-lab4         "/bin/bash"              About a minute ago   Exited (0) 7 seconds ago                       adoring_tu
f3c5e0874117        3c385233520e        "/bin/sh -c 'go inst…"   3 minutes ago        Exited (1) 3 minutes ago                       clever_davinci

Max@DESKTOP-0A1DC1R MINGW64 ~/USERPROFILE/src/dat520.github.io (master)
$ docker container purge

Usage:  docker container COMMAND

Manage containers

Options:


Commands:
  attach      Attach local standard input, output, and error streams to a running container
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  diff        Inspect changes to files or directories on a container's filesystem
  exec        Run a command in a running container
  export      Export a container's filesystem as a tar archive
  inspect     Display detailed information on one or more containers
  kill        Kill one or more running containers
  logs        Fetch the logs of a container
  ls          List containers
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  prune       Remove all stopped containers
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  run         Run a command in a new container
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  wait        Block until one or more containers stop, then print their exit codes

Run 'docker container COMMAND --help' for more information on a command.

Max@DESKTOP-0A1DC1R MINGW64 ~/USERPROFILE/src/dat520.github.io (master)
$ docker container prune
WARNING! This will remove all stopped containers.
Are you sure you want to continue? [y/N] y
Deleted Containers:
6bf5b70ee465baf54dfc08879d064ffc7f9d41ab8508b839d8e9d9dc985a6c8a
f3c5e0874117651444961ad94de79c996a435c7a96b17e7885d7935aab76a821

Total reclaimed space: 45B

Max@DESKTOP-0A1DC1R MINGW64 ~/USERPROFILE/src/dat520.github.io (master)
$ docker container list -a
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES

Max@DESKTOP-0A1DC1R MINGW64 ~/USERPROFILE/src/dat520.github.io (master)
$ docker network create --subnet=172.18.0.0/16 paxosnet
add0750e03043c74d3ff6b3a08e829f62d747d690d2c760865ff7849723ebabb

Max@DESKTOP-0A1DC1R MINGW64 ~/USERPROFILE/src/dat520.github.io (master)
$ docker network

Usage:  docker network COMMAND

Manage networks

Options:


Commands:
  connect     Connect a container to a network
  create      Create a network
  disconnect  Disconnect a container from a network
  inspect     Display detailed information on one or more networks
  ls          List networks
  prune       Remove all unused networks
  rm          Remove one or more networks

Run 'docker network COMMAND --help' for more information on a command.

Max@DESKTOP-0A1DC1R MINGW64 ~/USERPROFILE/src/dat520.github.io (master)
$ docker network inspect
"docker network inspect" requires at least 1 argument.
See 'docker network inspect --help'.

Usage:  docker network inspect [OPTIONS] NETWORK [NETWORK...] [flags]

Display detailed information on one or more networks

Max@DESKTOP-0A1DC1R MINGW64 ~/USERPROFILE/src/dat520.github.io (master)
$ docker network ls
NETWORK ID          NAME                DRIVER              SCOPE
891ea911b64d        bridge              bridge              local
a749ebebe292        host                host                local
2252a9b07aa4        none                null                local
add0750e0304        paxosnet            bridge              local

Max@DESKTOP-0A1DC1R MINGW64 ~/USERPROFILE/src/dat520.github.io (master)
$ docker network inspect paxosnet
[
    {
        "Name": "paxosnet",
        "Id": "add0750e03043c74d3ff6b3a08e829f62d747d690d2c760865ff7849723ebabb",
        "Created": "2019-03-07T10:30:52.12728034Z",
        "Scope": "local",
        "Driver": "bridge",
        "EnableIPv6": false,
        "IPAM": {
            "Driver": "default",
            "Options": {},
            "Config": [
                {
                    "Subnet": "172.18.0.0/16"
                }
            ]
        },
        "Internal": false,
        "Attachable": false,
        "Ingress": false,
        "ConfigFrom": {
            "Network": ""
        },
        "ConfigOnly": false,
        "Containers": {},
        "Options": {},
        "Labels": {}
    }
]

Max@DESKTOP-0A1DC1R MINGW64 ~/USERPROFILE/src/dat520.github.io (master)
$ docker run --net paxosnet --ip 172.18.0.2 -it dat520-lab4 /bin/bash
root@351cebb45231:/go# ip addr
1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
       valid_lft forever preferred_lft forever
2: sit0@NONE: <NOARP> mtu 1480 qdisc noop state DOWN group default qlen 1000
    link/sit 0.0.0.0 brd 0.0.0.0
16: eth0@if17: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP group default
    link/ether 02:42:ac:12:00:02 brd ff:ff:ff:ff:ff:ff link-netnsid 0
    inet 172.18.0.2/16 brd 172.18.255.255 scope global eth0
       valid_lft forever preferred_lft forever
root@351cebb45231:/go#



